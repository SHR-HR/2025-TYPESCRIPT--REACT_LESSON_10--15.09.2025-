// Экспорт интерфейса Post для типизации данных поста/статьи в приложении
export interface Post {
    // Уникальный идентификатор поста (строковый тип, обычно UUID)
    id: string;

    // Заголовок поста/статьи (строковый тип)
    title: string;

    // Содержание/текст поста (строковый тип)
    content: string;

    // Автор поста (строковый тип - имя автора или идентификатор)
    author: string;

    // Необязательное поле: URL ссылка на изображение (строковый тип или null)
    // Используется когда изображение загружено по ссылке
    image_url?: string | null;

    // Необязательное поле: имя файла изображения в папке /uploads (строковый тип или null)
    // Используется когда изображение загружено через форму загрузки
    image_file?: string | null;

    // Дата и время создания поста в ISO формате (строковый тип)
    // Получается с сервера в формате "2023-10-15T14:30:00.000Z"
    created_at: string;

    // Дата и время последнего обновления поста в ISO формате (строковый тип)
    updated_at: string;
}

/*
===========================================
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В ДАННОМ ФАЙЛЕ:
===========================================

1. Файл Post.ts - файл с TypeScript интерфейсом для типизации данных постов/статей

2. Комментарий "Экспорт интерфейса Post для типизации данных поста/статьи..." - объясняет
   назначение интерфейса для структурирования данных публикаций

3. Комментарий "Уникальный идентификатор поста (строковый тип, обычно UUID)..." - описывает
   свойство id как строковый уникальный идентификатор, обычно в формате UUID

4. Комментарий "Заголовок поста/статьи (строковый тип)..." - поясняет
   свойство title как строковое значение заголовка публикации

5. Комментарий "Содержание/текст поста (строковый тип)..." - объясняет
   свойство content как строковое значение основного текста публикации

6. Комментарий "Автор поста (строковый тип - имя автора или идентификатор)..." - описывает
   свойство author как строковое значение, которое может содержать имя автора или его ID

7. Комментарий "Необязательное поле: URL ссылка на изображение..." - поясняет
   опциональное свойство image_url для случаев когда изображение загружено по внешней ссылке

8. Комментарий "Необязательное поле: имя файла изображения в папке /uploads..." - объясняет
   опциональное свойство image_file для случаев когда изображение загружено через форму

9. Комментарий "Дата и время создания поста в ISO формате..." - описывает
   свойство created_at как строку в ISO формате, получаемую от сервера

10. Комментарий "Дата и время последнего обновления поста в ISO формате..." - поясняет
    свойство updated_at как строку в ISO формате для отслеживания изменений

ОСОБЕННОСТИ РЕАЛИЗАЦИИ:

- Интерфейс Post определяет полную структуру данных публикации
- Поля image_url и image_file опциональные (не обязательные) и могут быть null
- Оба поля для изображения взаимозаменяемы - используется только одно из них
- Дата и время хранятся в ISO формате для удобства парсинга и отображения

СТРУКТУРА ДАННЫХ:

Post - структура публикации:
{
  id: string,                 // Уникальный идентификатор (UUID)
  title: string,              // Заголовок публикации
  content: string,            // Текст публикации
  author: string,             // Автор публикации
  image_url?: string | null,  // URL внешнего изображения (опционально)
  image_file?: string | null, // Имя файла в папке uploads (опционально)
  created_at: string,         // Дата создания в ISO формате
  updated_at: string          // Дата обновления в ISO формате
}

ИСПОЛЬЗОВАНИЕ:
- Типизация данных постов в компонентах React
- Типизация состояния постов в Redux store
- Типизация параметров API запросов и ответов для постов
- Валидация структуры объектов постов при получении с сервера
- Определение структуры данных для форм создания/редактирования постов
*/