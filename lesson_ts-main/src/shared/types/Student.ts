// Экспорт типа AttendStatus для типизации статусов посещаемости студентов
export type AttendStatus = "none" | "late" | "present";

// Экспорт интерфейса Student для типизации данных студента в приложении
export interface Student {
    // Уникальный идентификатор студента (числовой тип)
    id: number;

    // Имя студента (строковый тип)
    name: string;

    // Статус посещаемости студента (тип AttendStatus)
    attend: AttendStatus;

    // Оценка студента (числовой тип)
    grade: number;

    // Флаг онлайн-статуса студента (булевый тип), строгое поле как на сервере
    online: boolean;
}

/*
===========================================
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В ДАННОМ ФАЙЛЕ:
===========================================

1. Файл Student.ts - файл с TypeScript типами для студентов и статусов посещаемости

2. Комментарий "Экспорт типа AttendStatus для типизации статусов посещаемости..." - объясняет
   назначение типа перечисления статусов посещаемости

3. Комментарий "Экспорт интерфейса Student для типизации данных студента..." - описывает
   назначение интерфейса студента

4. Комментарий "Уникальный идентификатор студента (числовой тип)..." - поясняет
   свойство id как числовой уникальный идентификатор студента

5. Комментарий "Имя студента (строковый тип)..." - описывает
   свойство name как строковое значение имени студента

6. Комментарий "Статус посещаемости студента (тип AttendStatus)..." - объясняет
   свойство attend как одно из значений перечисления статусов посещаемости

7. Комментарий "Оценка студента (числовой тип)..." - поясняет
   свойство grade как числовое значение оценки студента

8. Комментарий "Флаг онлайн-статуса студента (булевый тип)..." - описывает
   свойство online как булево значение, указывающее онлайн статус студента

ОСОБЕННОСТИ РЕАЛИЗАЦИИ:

- Тип AttendStatus представляет собой union type с тремя возможными значениями
- Интерфейс Student определяет полную структуру данных студента
- Все свойства обязательные (не опциональные)
- Поле online имеет строгую типизацию boolean для соответствия серверной структуре

СТРУКТУРА ТИПОВ:

AttendStatus - возможные значения:
- "none" - отсутствует
- "late" - опоздал
- "present" - присутствует

Student - структура:
{
  id: number,           // Уникальный числовой идентификатор
  name: string,         // Имя студента
  attend: AttendStatus, // Статус посещаемости
  grade: number,        // Оценка (число)
  online: boolean       // Онлайн статус (true/false)
}

ИСПОЛЬЗОВАНИЕ:
- Типизация данных студентов в компонентах React
- Типизация состояния студентов в Redux store
- Типизация параметров API запросов и ответов для студентов
- Валидация структуры объектов студента
- Определение возможных значений статуса посещаемости
*/