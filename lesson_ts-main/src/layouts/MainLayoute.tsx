// Импорт типа ReactNode из библиотеки React для типизации дочерних элементов
import type { ReactNode } from "react";
// Импорт компонента Link из react-router-dom для создания навигационных ссылок
import { Link } from "react-router-dom";

// Определение типа Props для компонента MainLayoute
// children - необязательное свойство типа ReactNode (любой React-элемент или компонент)
type Props = { children?: ReactNode };

// Объявление функционального компонента MainLayoute с деструктуризацией props
// Принимает объект props, из которого извлекается свойство children
const MainLayoute = ({ children }: Props) => {
  // Возвращение JSX разметки компонента
  return (
    // Основной контейнер приложения с классом app
    <div className="app">
      {/* Шапка сайта */}
      <header>
        {/* Навигационное меню */}
        <nav className="container nav">
          {/* Ссылка на главную страницу */}
          <Link to="/">Главная</Link>
          {/* Ссылка на страницу "О нас" */}
          <Link to="/about">О нас</Link>
          {/* Ссылка на страницу пользователей */}
          <Link to="/users">Пользователи</Link>
          {/* Ссылка на страницу постов */}
          <Link to="/posts">Посты</Link>
          {/* Ссылка на страницу студентов */}
          <Link to="/students">Студенты</Link>
        </nav>
      </header>

      {/* Основное содержание страницы */}
      {/* В этот элемент подставляются дочерние компоненты (children) */}
      <main>{children}</main>

      {/* Подвал сайта */}
      <footer>
        {/* Контейнер для содержимого подвала */}
        <div className="container">Footer</div>
      </footer>
    </div>
  );
};

// Экспорт компонента MainLayoute по умолчанию
export default MainLayoute;

/*
===========================================
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В ДАННОМ ФАЙЛЕ:
===========================================

1. Файл MainLayoute.tsx - основной layout-компонент приложения

2. Комментарий "Импорт типа ReactNode из библиотеки React для типизации дочерних элементов" - 
   объясняет назначение импорта типа ReactNode, который используется для типизации свойства children

3. Комментарий "Импорт компонента Link из react-router-dom для создания навигационных ссылок" - 
   описывает импорт компонента Link, который используется для навигации между страницами без перезагрузки

4. Комментарий "Определение типа Props для компонента MainLayoute" - 
   поясняет создание типа Props для типизации свойств компонента

5. Комментарий "children - необязательное свойство типа ReactNode (любой React-элемент или компонент)" - 
   подробно описывает свойство children, которое может содержать любой React-элемент

6. Комментарий "Объявление функционального компонента MainLayoute с деструктуризацией props" - 
   объясняет объявление компонента и извлечение свойства children из объекта props

7. Комментарий "Принимает объект props, из которого извлекается свойство children" - 
   уточняет механизм работы деструктуризации в параметрах компонента

8. Комментарий "Возвращение JSX разметки компонента" - 
   указывает на начало возвращаемой JSX структуры

9. Комментарий "Основной контейнер приложения с классом app" - 
   описывает корневой элемент разметки с CSS классом

10. Комментарий "Шапка сайта" - 
    обозначает секцию header, содержащую навигацию

11. Комментарий "Навигационное меню" - 
    описывает элемент nav с классами container и nav

12. Комментарий "Ссылка на главную страницу" - 
    поясняет назначение первой ссылки в навигации

13. Комментарий "Ссылка на страницу 'О нас'" - 
    поясняет назначение второй ссылки в навигации

14. Комментарий "Ссылка на страницу пользователей" - 
    поясняет назначение третьей ссылки в навигации

15. Комментарий "Ссылка на страницу постов" - 
    поясняет назначение четвертой ссылки в навигации

16. Комментарий "Ссылка на страницу студентов" - 
    поясняет назначение пятой ссылки в навигации

17. Комментарий "Основное содержание страницы" - 
    описывает элемент main, который содержит основное содержимое

18. Комментарий "В этот элемент подставляются дочерние компоненты (children)" - 
    объясняет механизм передачи и отображения дочерних элементов

19. Комментарий "Подвал сайта" - 
    обозначает секцию footer в нижней части страницы

20. Комментарий "Контейнер для содержимого подвала" - 
    описывает div с классом container внутри footer

21. Комментарий "Экспорт компонента MainLayoute по умолчанию" - 
    поясняет экспорт компонента для использования в других частях приложения

ОСОБЕННОСТИ РЕАЛИЗАЦИИ:

- Компонент является layout-компонентом высшего порядка
- Содержит общую структуру страницы: header, main, footer
- Навигационное меню предоставляет доступ ко всем основным разделам сайта
- Использует компонент Link для клиентской навигации (без перезагрузки страницы)
- Принимает и отображает динамическое содержимое через свойство children

СТРУКТУРА КОМПОНЕНТА:

- Корневой div с классом app
- Header с навигационным меню
- Main секция для основного содержимого
- Footer с информацией в подвале

ИСПОЛЬЗОВАНИЕ:
- Обеспечивает一致ный внешний вид всех страниц приложения
- Содержит общую навигацию для всего сайта
- Служит оберткой для страничных компонентов
- Упрощает поддержку и изменение общей структуры приложения
*/