// Импорт React из пакета 'react' - необходим для работы с JSX и функциональными компонентами
import React from 'react';
// Импорт компонентов маршрутизации из пакета 'react-router-dom'
// BrowserRouter - компонент для HTML5 history API (обертка для всего приложения)
// Routes - контейнер для всех маршрутов приложения
// Route - компонент для определения отдельных маршрутов
// Navigate - компонент для программного перенаправления (редиректа)
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';

// Импорт компонентов страниц из соответствующих файлов
import HomePage from './pages/HomePage'; // Главная страница
import AboutPage from './pages/AboutPage'; // Страница "О нас"
import UsersPage from './pages/UsersPage'; // Страница пользователей
import UserDetailPage from './pages/UserDetailPage'; // Страница детальной информации о пользователе
import StudentsPage from './pages/StudentsPage'; // Страница студентов
import NotFoundPage from './pages/NotFoundPage'; // Страница 404 (не найдено)
import PostsPage from './pages/PostsPage'; // Страница постов

// Объявление функционального компонента App с типизацией React.FC (Functional Component)
const App: React.FC = () => {
  // Возвращение JSX разметки компонента
  return (
    // Компонент Router - обертка для всего приложения, предоставляет функциональность маршрутизации
    <Router>
      {/* Базовый div контейнер для всего содержимого приложения */}
      <div>
        {/* Компонент Routes - контейнер для всех маршрутов приложения */}
        <Routes>
          {/* Маршрут для корневой страницы (/) - отображает компонент HomePage */}
          <Route path="/" element={<HomePage />} />

          {/* Маршрут для страницы "О нас" (/about) - отображает компонент AboutPage */}
          <Route path="/about" element={<AboutPage />} />

          {/* Маршрут для страницы пользователей (/users) - отображает компонент UsersPage */}
          <Route path="/users" element={<UsersPage />} />

          {/* Динамический маршрут для детальной страницы пользователя (/users/:id) 
              :id - параметр маршрута который передается в компонент UserDetailPage */}
          <Route path="/users/:id" element={<UserDetailPage />} />

          {/* Маршрут-редирект: при переходе на /old-about автоматически перенаправляет на /about
              replace - заменяет текущую запись в history вместо добавления новой */}
          <Route path="/old-about" element={<Navigate to="/about" replace />} />

          {/* Маршрут для страницы постов (/posts) - отображает компонент PostsPage */}
          <Route path="/posts" element={<PostsPage />} />

          {/* Маршрут для страницы студентов (/students) - отображает компонент StudentsPage */}
          <Route path="/students" element={<StudentsPage />} />

          {/* Маршрут для всех остальных путей (*) - отображает компонент NotFoundPage (404)
              Должен быть последним в списке маршрутов */}
          <Route path="*" element={<NotFoundPage />} />
        </Routes>
      </div>
    </Router>
  );
};

// Экспорт компонента App по умолчанию для использования в других файлах
export default App;

/*
===========================================
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В ДАННОМ ФАЙЛЕ:
===========================================

1. Файл App.tsx - корневой компонент React приложения с настройкой маршрутизации

2. Комментарий "Импорт React из пакета 'react'..." - объясняет необходимость импорта React
   для использования JSX синтаксиса и работы с функциональными компонентами

3. Комментарий "Импорт компонентов маршрутизации..." - описывает импорт основных компонентов
   react-router-dom для организации клиентской маршрутизации

4. Комментарий "BrowserRouter - компонент для HTML5 history API..." - поясняет назначение
   Router компонента как обертки для всего приложения

5. Комментарий "Импорт компонентов страниц из соответствующих файлов..." - перечисляет
   все импортируемые компоненты страниц с кратким описанием каждого

6. Комментарий "Объявление функционального компонента App с типизацией..." - описывает
   создание основного компонента приложения с TypeScript типизацией

7. Комментарий "Возвращение JSX разметки компонента" - указывает на возврат JSX из функции компонента

8. Комментарий "Компонент Router - обертка для всего приложения..." - поясняет роль
   Router компонента в предоставлении контекста маршрутизации

9. Комментарий "Базовый div контейнер для всего содержимого..." - описывает назначение
   оберточного div элемента

10. Комментарий "Компонент Routes - контейнер для всех маршрутов..." - объясняет назначение
    Routes компонента как контейнера для Route компонентов

11. Комментарий "Маршрут для корневой страницы (/)..." - описывает настройку маршрута
    для главной страницы приложения

12. Комментарий "Маршрут для страницы 'О нас' (/about)..." - описывает маршрут для страницы about

13. Комментарий "Маршрут для страницы пользователей (/users)..." - описывает маршрут для страницы пользователей

14. Комментарий "Динамический маршрут для детальной страницы пользователя..." - поясняет
    использование параметра :id в маршруте для динамических данных

15. Комментарий "Маршрут-редирект: при переходе на /old-about..." - описывает механизм
    перенаправления с одного URL на другой

16. Комментарий "Маршрут для страницы постов (/posts)..." - описывает маршрут для страницы постов

17. Комментарий "Маршрут для страницы студентов (/students)..." - описывает маршрут для страницы студентов

18. Комментарий "Маршрут для всех остальных путей (*)..." - объясняет catch-all маршрут
    для обработки несуществующих URL (страница 404)

19. Комментарий "Экспорт компонента App по умолчанию..." - описывает экспорт компонента
    для использования в main.tsx

СТРУКТУРА МАРШРУТИЗАЦИИ:
- Приложение использует клиентскую маршрутизацию (Client-Side Routing)
- Все маршруты определены в одном месте для удобства управления
- Порядок маршрутов важен: более специфичные маршруты должны быть выше
- Маршрут * (catch-all) должен быть последним в списке

ОСОБЕННОСТИ РЕАЛИЗАЦИИ:
- Типизация React.FC для функционального компонента
- Использование современных хуков и API react-router-dom v6
- Чистая и декларативная конфигурация маршрутов
- Поддержка динамических параметров маршрутов (:id)
- Наличие редиректа для обработки устаревших URL
*/