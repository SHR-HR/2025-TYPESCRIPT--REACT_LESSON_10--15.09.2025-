// Стили для компонентов связанных с постами (форма создания и сетка постов)

// Класс для формы создания/редактирования поста
.post-form {
    // CSS Grid布局 для формы: 3 колонки с адаптивными ширинами
    display: grid;
    // Шаблон колонок: 1fr (гибкая) | 160px (фиксированная) | 220px (фиксированная)
    grid-template-columns: 1fr 160px 220px;
    // Расстояние между элементами grid: 14px
    gap: 14px;
    // Выравнивание элементов по началу (вертикально)
    align-items: start;
    // Внешний отступ снизу: 20px (отделение от следующего контента)
    margin-bottom: 20px;

    // Контейнер для input полей формы
    .inputs {
        // Grid布局 для внутренних input элементов
        display: grid;
        // Расстояние между input элементами: 8px
        gap: 8px;
    }

    // Стили для блока загрузки файла
    .file input {
        // Блочное отображение input элемента (занимает всю ширину)
        display: block;
    }

    // Контейнер для кнопок действий формы
    .actions {
        // Grid布局 для кнопок действий
        display: grid;
        // Расстояние между кнопками: 8px
        gap: 8px;
        // Выравнивание содержимого по началу (вертикально)
        align-content: start;
    }

    // Контейнер для превью загруженного изображения
    .preview {
        // Фон из CSS переменной --surface
        background: var(--surface);
        // Граница толщиной 1px с цветом из переменной --border
        border: 1px solid var(--border);
        // Скругление углов из переменной --radius
        border-radius: var(--radius);
        // Тень из переменной --shadow
        box-shadow: var(--shadow);
        // Внутренние отступы: 8px со всех сторон
        padding: 8px;

        // Стили для изображения внутри превью
        img {
            // Ширина 100% контейнера
            width: 100%;
            // Фиксированная высота: 160px
            height: 160px;
            // Обрезка и заполнение изображения с сохранением пропорций
            object-fit: cover;
            // Скругление углов изображения: 8px
            border-radius: 8px;
            // Блочное отображение (убирает лишние отступы)
            display: block;
        }
    }
}

// Класс для сетки постов (контейнер карточек)
.posts-grid {
    // CSS Grid布局 для сетки постов
    display: grid;
    // Автоматическое заполнение колонками с минимальной шириной 260px
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    // Расстояние между карточками: 14px
    gap: 14px;
}

// Класс для карточки отдельного поста
.post-card {
    // Фон карточки из переменной --surface
    background: var(--surface);
    // Граница толщиной 1px с цветом из переменной --border
    border: 1px solid var(--border);
    // Скругление углов из переменной --radius
    border-radius: var(--radius);
    // Тень из переменной --shadow (эффект поднятия)
    box-shadow: var(--shadow);
    // Скрытие переполнения содержимого (для скругленных углов)
    overflow: hidden;
    // Grid布局 внутри карточки: 3 строки (auto | 1fr | auto)
    display: grid;
    // Шаблон строк: заголовок auto | контент 1fr | действия auto
    grid-template-rows: auto 1fr auto;

    // Стили для изображения в карточке поста
    .post-img {
        // Ширина 100% контейнера
        width: 100%;
        // Фиксированная высота: 160px
        height: 160px;
        // Обрезка и заполнение изображения с сохранением пропорций
        object-fit: cover;
        // Блочное отображение (убирает лишние отступы)
        display: block;
    }

    // Контейнер для основного содержимого карточки (текст)
    .post-body {
        // Внутренние отступы: 12px сверху/снизу, 14px слева/справа
        padding: 12px 14px;
    }

    // Заголовок поста внутри карточки
    .post-title {
        // Убираем внешние отступы сверху/снизу, оставляем 4px снизу
        margin: 0 0 4px;
        // Размер шрифта: 16px
        font-size: 16px;
        // Жирность шрифта: 700 (bold)
        font-weight: 700;
    }

    // Мета-информация поста (автор, дата)
    .post-meta {
        // Цвет текста из переменной --muted (приглушенный)
        color: var(--muted);
        // Размер шрифта: 12px (меньше основного)
        font-size: 12px;
        // Внешний отступ снизу: 8px (отделение от текста)
        margin-bottom: 8px;
    }

    // Текст поста (основное содержимое)
    .post-text {
        // Убираем внешние отступы
        margin: 0;
        // Цвет текста из переменной --text (основной цвет)
        color: var(--text);
        // Размер шрифта: 14px
        font-size: 14px;
    }

    // Контейнер для кнопок действий карточки (удалить, редактировать)
    .post-actions {
        // Flexbox布局 для горизонтального расположения кнопок
        display: flex;
        // Расстояние между кнопками: 8px
        gap: 8px;
        // Внутренние отступы: 10px сверху/снизу, 12px слева/справа
        padding: 10px 12px;
        // Верхняя граница толщиной 1px с цветом из переменной --border
        border-top: 1px solid var(--border);
    }
}

// Медиазапрос для адаптивности на экранах меньше 900px
@media (max-width: 900px) {

    // Адаптивные стили для формы поста
    .post-form {
        // Изменение grid布局 на одну колонку (вертикальное расположение)
        grid-template-columns: 1fr;

        // Увеличение высоты превью изображения для мобильных
        .preview img {
            // Увеличенная высота: 220px для лучшего отображения на мобильных
            height: 220px;
        }
    }
}

/*
===========================================
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В ДАННОМ ФАЙЛЕ:
===========================================

1. Файл posts.scss - стили для компонентов работы с постами (форма и карточки)

2. Комментарий "Класс для формы создания/редактирования поста..." - описывает
   форму с трехколоночным grid布局 для разных типов контента

3. Комментарий "CSS Grid布局 для формы..." - поясняет использование CSS Grid
   для сложного расположения элементов формы

4. Комментарий "Шаблон колонок: 1fr | 160px | 220px..." - детализирует ширины
   колонок: гибкая, фиксированная для кнопок, фиксированная для превью

5. Комментарий "Контейнер для input полей формы..." - описывает внутренний grid
   для полей ввода с равномерными отступами

6. Комментарий "Стили для блока загрузки файла..." - поясняет блочное отображение
   input элемента для загрузки файлов

7. Комментарий "Контейнер для кнопок действий формы..." - описывает grid布局
   для кнопок с выравниванием по началу

8. Комментарий "Контейнер для превью загруженного изображения..." - детализирует
   стили контейнера предпросмотра изображения с тенями и отступами

9. Комментарий "Стили для изображения внутри превью..." - описывает фиксированные
   размеры и object-fit: cover для корректного отображения изображений

10. Комментарий "Класс для сетки постов..." - поясняет адаптивную grid сетку
    с автоматическим заполнением и минимальной шириной карточек

11. Комментарий "Класс для карточки отдельного поста..." - описывает структуру
    карточки поста с тремя секциями: изображение, контент, действия

12. Комментарий "Grid布局 внутри карточки..." - поясняет вертикальное разделение
    карточки на три логические части

13. Комментарий "Стили для изображения в карточке поста..." - описывает
    единообразное отображение изображений в карточках

14. Комментарий "Контейнер для основного содержимого карточки..." - детализирует
    отступы для текстового содержимого поста

15. Комментарий "Заголовок поста внутри карточки..." - описывает стили заголовка
    с жирным шрифтом и отступами

16. Комментарий "Мета-информация поста..." - поясняет стили для второстепенной
    информации (автор, дата) с приглушенными цветами

17. Комментарий "Текст поста..." - описывает основные стили для контента поста

18. Комментарий "Контейнер для кнопок действий карточки..." - детализирует
    расположение кнопок действий в нижней части карточки

19. Комментарий "Медиазапрос для адаптивности..." - описывает адаптацию формы
    для мобильных устройств с изменением布局 на одноколоночный

ОСОБЕННОСТИ ДИЗАЙНА:
- Современный card-based дизайн с тенями и скруглениями
- Адаптивная grid система для сетки постов
- Продуманная типографика с иерархией заголовков
- Семантическое использование цветов через CSS переменные
- Единообразное оформление form элементов и карточек

ТЕХНИЧЕСКИЕ ПРИЕМЫ:
- CSS Grid для сложных布局 (форма и сетка карточек)
- object-fit: cover для корректного отображения изображений
- minmax() функция для адаптивных grid колонок
- auto-fill для автоматического заполнения пространства
- Медиазапросы для мобильной адаптации
- Grid template rows для контроля высоты секций карточки

АДАПТИВНОСТЬ:
- На десктопе: трехколоночная форма и адаптивная сетка карточек
- На мобильных: одноколоночная форма и перестроение сетки
- Увеличенная высота превью изображения на мобильных для лучшей видимости
*/